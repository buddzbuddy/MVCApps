@model VoterManager.Models.AgitatorViewModel

@{
    ViewBag.Title = "Просмотр агитатора";
}
@section heads {
    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
    <script src="~/Scripts/markerwithlabel.js" type="text/javascript"></script>
<style type="text/css">
    .labels {
        color: black;
        background-color: white;
        font-family: "Lucida Grande", "Arial", sans-serif;
        font-size: 10px;
        font-weight: bold;
        text-align: center;
        min-width: 10px;
        border: 2px solid red;
        white-space: nowrap;
    }
</style>

}

<h2>Просмотр агитатора: привязанные дома</h2>
@Html.ActionLink("открыть привязанные УИК", "ViewInMap2", new { Id = Model.Agitator.Id })

<div id="canvas" style="height: 500px; width:600px;float:right"></div>
<fieldset>
    <legend>Агитатор</legend>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Agitator.PersonId)
    </div>
    <div class="display-field">
        @if (Model.Agitator.PersonId.HasValue)
        {
            Html.RenderAction("ShowPartial", "Person", new { Id = Model.Agitator.PersonId });
        }
    </div>

</fieldset>
<h3>Сводная информация</h3>
<hr />
<p>Кол-во домов: @ViewBag.HouseCount</p>
<p>Кол-во избирателей: @ViewBag.VoterCount</p>
<p>Кол-во полит. взглядов: @ViewBag.PolitViewCount</p>
<img src="@Url.Action("Agitator", "Chart", new { Id = Model.Agitator.Id })" />
<hr />
@Html.ActionLink("Назад", "Show", new { Id = Model.Agitator.Id })

<!--Устанавливаем секцию scripts, которая затем будет рендериться на мастер-странице -->
@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            GetMap();
        });
        // Функция загрузки
        function GetMap() {

            google.maps.visualRefresh = true;
            var Bishkek = new google.maps.LatLng(42.874722, 74.612222);

            var mapOptions = {
                zoom: 13,
                center: Bishkek,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            var map = new google.maps.Map(document.getElementById("canvas"), mapOptions);
            var infowindow = new google.maps.InfoWindow();
            google.maps.event.addListener(map, 'click', function () {
                infowindow.close();
            });
            $.getJSON('@(Url.Action("GetData", new { Id = Model.Agitator.Id }))', function (data) {
                if (!data.length) {
                    $('#canvas').before('<h3 style="color:red">Координаты объектов не найдены для отображения на карте</h3>');
                    return;
                }
                var latlngbounds = new google.maps.LatLngBounds();
                $.each(data, function (i, item) {
                    var latlng = new google.maps.LatLng(item.Latitude, item.Longitude);
                    latlngbounds.extend(latlng);
                    var marker = new MarkerWithLabel({
                        position: latlng,
                        map: map,
                        //draggable: true,
                        title: item.Name,
                        labelContent: "<i>" + item.Name + "</i>",
                        //labelAnchor: new google.maps.Point(0, 0),
                        labelClass: "labels",
                        labelStyle: { opacity: 0.75 }
                    });

                    marker.setIcon("---"/*item.IconPath*/);

                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.setContent("<div class='message-info'><b>Дом № " + item.Name + "</b><hr style='margin-bottom:0px;' />"
                                + "<br />Всего избирателей: " + item.VoterCount
                                + "<br />Политические взгляды:"
                                + drawParties(item.Parties)
                                + (item.Parties.length ? ("<img src='/Chart/House/" + item.Id + "' alt='Диаграмма' />") : "")
                                + "</div>"
                                );
                        infowindow.open(map, marker);
                    });
                });
                map.setCenter(latlngbounds.getCenter(), map.fitBounds(latlngbounds));
            });
        }

        function drawParties(parties) {
            var result = "<ul>";

            var ul = document.createElement('ul');
            for (var i = 0; i < parties.length; i++) {

                result = result + "<li>" + parties[i].Key + ": " + parties[i].Value
            }

            return result + "</ul>";
        }

    </script>
}